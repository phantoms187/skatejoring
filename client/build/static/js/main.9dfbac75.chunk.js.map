{"version":3,"sources":["utils/setAuthToken.js","actions/authActions.js","actions/types.js","reducers/authReducers.js","reducers/errorReducers.js","reducers/index.js","store.js","components/register.component.js","components/edit.component.js","components/TableRow.js","components/index.component.js","components/home.component.js","components/eventTableRow.js","components/events.component.js","components/eventCreate.component.js","actions/eventActions.js","components/login.component.js","components/layout/Navbar.js","components/private-route/PrivateRoute.js","components/dashboard/Dashboard.js","App.js","serviceWorker.js","index.js"],"names":["setAuthToken","token","axios","defaults","headers","common","setCurrentUser","decoded","type","payload","logoutUser","dispatch","localStorage","removeItem","isEmpty","require","initialState","isAuthenticated","user","loading","combineReducers","auth","state","action","errors","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","Register","onChange","e","setState","target","id","value","onSubmit","preventDefault","person","first_name","last_name","number","email","password","password2","props","registerUser","history","this","push","nextProps","class","className","Component","connect","userData","post","then","res","catch","err","response","data","withRouter","locationToPost","Edit","onChangeUserFirstName","bind","onChangeUserLastName","onChangeUserNumber","onChangeUserEmail","get","match","params","error","console","log","change","status","send","TableRow","delete","obj","_id","location","reload","to","onClick","editButton","deleteButton","Index","users","map","object","i","key","colSpan","actionCol","tableRow","Home","Item","src","alt","Caption","EventTableRow","name","date","time","weather","color","icon","width","height","autoplay","Events","events","eventTableRow","CreateEvent","place","street","locationStreet","city","locationCity","locationState","zip","locationZip","moment","format","currently","summary","toUpperCase","replace","event","addEvent","eventData","Login","loginUser","noValidate","setItem","jwt_decode","Navbar","onLogoutClick","loggedIn","component","rest","render","Dashboard","jwtToken","currentTime","Date","now","exp","href","App","exact","path","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9dfbac75.chunk.js","sourcesContent":["import axios from \"axios\";\nconst setAuthToken = token => {\n  if (token) {\n    // Apply authorization token to every request if logged in\n    axios.defaults.headers.common[\"Authorization\"] = token;\n  } else {\n    // Delete auth header\n    delete axios.defaults.headers.common[\"Authorization\"];\n  }\n};\nexport default setAuthToken;","import axios from \"axios\";\nimport setAuthToken from \"../utils/setAuthToken\";\nimport jwt_decode from \"jwt-decode\";\nimport {\n  GET_ERRORS,\n  SET_CURRENT_USER,\n  USER_LOADING\n} from \"./types\";\n\n// Register User\nexport const registerUser = (userData, history) => dispatch => {\n  axios\n    .post(\"/users/register\", userData)\n    .then(res => history.push(\"/login\")) // re-direct to login on successful register\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n\n// Login - get user token\nexport const loginUser = userData => dispatch => {\n  axios\n    .post(\"/users/login\", userData)\n    .then(res => {\n      // Save to localStorage\n// Set token to localStorage\n      const { token } = res.data;\n      localStorage.setItem(\"jwtToken\", token);\n      // Set token to Auth header\n      setAuthToken(token);\n      // Decode token to get user data\n      const decoded = jwt_decode(token);\n      // Set current user\n      dispatch(setCurrentUser(decoded));\n    })\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n\n// Set logged in user\nexport const setCurrentUser = decoded => {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded\n  };\n};\n\n// User loading\nexport const setUserLoading = () => {\n  return {\n    type: USER_LOADING\n  };\n};\n\n// Log user out\nexport const logoutUser = () => dispatch => {\n  // Remove token from local storage\n  localStorage.removeItem(\"jwtToken\");\n  // Remove auth header for future requests\n  setAuthToken(false);\n  // Set current user to empty object {} which will set isAuthenticated to false\n  dispatch(setCurrentUser({}));\n};","export const GET_ERRORS = \"GET_ERRORS\";\nexport const USER_LOADING = \"USER_LOADING\";\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";","import {\n  SET_CURRENT_USER,\n  USER_LOADING\n} from \"../actions/types\";\n\nconst isEmpty = require(\"is-empty\");\n\nconst initialState = {\n  isAuthenticated: false,\n  user: {},\n  loading: false\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_CURRENT_USER:\n      return {\n        ...state,\n        isAuthenticated: !isEmpty(action.payload),\n        user: action.payload\n      };\n    case USER_LOADING:\n      return {\n        ...state,\n        loading: true\n      };\n    default:\n      return state;\n  }\n}","import { GET_ERRORS } from \"../actions/types\";\nconst initialState = {};\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_ERRORS:\n      return action.payload;\n    default:\n      return state;\n  }\n}","import { combineReducers } from \"redux\";\nimport authReducer from \"./authReducers\";\nimport errorReducer from \"./errorReducers\";\nexport default combineReducers({\n  auth: authReducer,\n  errors: errorReducer\n});\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  compose(\n    applyMiddleware(...middleware),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n);\nexport default store;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Link, withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { registerUser } from \"../actions/authActions\";\nimport classnames from \"classnames\";\n\n\n//Class to create a new user for email distribution\nclass Register extends Component {\n  constructor() {\n      super();\n     \n      //Set current state to empty\n      this.state = {\n          first_name: '',\n          last_name: '',\n          number: '',\n          email: '',\n          password: '',\n          password2: '',\n          errors: {}\n      };\n  }\n  \n  componentDidMount() {\n    // If logged in and user navigates to Register page, should redirect them to dashboard\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n  \n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n  \n \n  //When input for each is changed, set new state of variable\n  onChange = e => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n  \n//When the form is submitted, set object to post with axios\n  onSubmit = e => {\n    e.preventDefault();\n    const person = {\n      first_name: this.state.first_name,\n      last_name: this.state.last_name,\n      number: this.state.number,\n      email: this.state.email,\n      password: this.state.password,\n      password2: this.state.password2\n    };\n  \n    this.props.registerUser(person, this.props.history); \n    \n  }\n //Render form for create\n  render() {\n    return (\n        <div class=\"title-welcome container\">\n          <div class=\"row\">\n            <div class=\"col-md-6 col-lg-6 offset-lg-3\">\n              <h3>Add New User</h3>\n              <form onSubmit={this.onSubmit}>\n                  <div className=\"form-group\">\n                      <label>First Name:  </label>\n                      <input\n                        id = \"first_name\"\n                        type=\"text\"\n                        className=\"form-control\"\n                        value={this.state.first_name}\n                        onChange={this.onChange}\n                        />\n                  </div>\n                  <div className=\"form-group\">\n                      <label>Last Name:  </label>\n                      <input\n                      id = \"last_name\"\n                        type=\"text\"\n                        className=\"form-control\"\n                        value={this.state.last_name}\n                        onChange={this.onChange}                        \n                      />\n                  </div>\n                  <div className=\"form-group\">\n                      <label>Phone Number: </label>\n                      <input\n                        id = \"number\"\n                        type=\"text\"\n                        className=\"form-control\"\n                        value={this.state.number}\n                        onChange={this.onChange}\n                        />\n                  </div>\n                  <div className=\"form-group\">\n                      <label>E-mail: </label>\n                      <input\n                        id = \"email\"\n                        type=\"email\"\n                        className=\"form-control\"\n                        value={this.state.email}\n                        onChange={this.onChange}\n                        />\n                  </div>\n                  <div className=\"form-group\">\n                      <label>Password: </label>\n                      <input\n                        id = \"password\"\n                        type=\"password\"\n                        className=\"form-control\"\n                        value={this.state.password}\n                        onChange={this.onChange}\n                        />\n                  </div>\n                  <div className=\"form-group\">\n                      <label>Confirm Password: </label>\n                      <input\n                        id = \"password2\"\n                        type=\"password\"\n                        className=\"form-control\"\n                        value={this.state.password2}\n                        onChange={this.onChange}\n                        />\n                  </div>\n                  <div className=\"form-group\">\n                      <input type=\"submit\" value=\"Register User\" className=\"btn btn-primary\"/>\n                  </div>\n                </form>\n              </div>\n            </div>\n        </div>\n    );\n  }\n}\nRegister.propTypes = {\n  registerUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { registerUser }\n)(withRouter(Register));\n","import React, { Component } from 'react';\nimport axios from 'axios';\n\nconst locationToPost = 'https://35a7deb5f76e493e9412648419a0a663.vfs.cloud9.us-west-2.amazonaws.com';\n\n//Class to edit a user's info\nexport default class Edit extends Component {\n  constructor(props) {\n    super(props);\n    //Bind all page attributes to current state\n      this.onChangeUserFirstName = this.onChangeUserFirstName.bind(this);\n      this.onChangeUserLastName = this.onChangeUserLastName.bind(this);\n      this.onChangeUserNumber = this.onChangeUserNumber.bind(this);\n      this.onChangeUserEmail = this.onChangeUserEmail.bind(this);\n      this.onSubmit = this.onSubmit.bind(this);\n\n    this.state = {\n          first_name: '',\n          last_name: '',\n          number: '',\n          email: ''\n      };\n  }\n//Get user to edit from DB\n  componentDidMount() {\n      axios.get( locationToPost+'/users/edit/'+this.props.match.params.id)\n          .then(response => {\n              this.setState({ \n                first_name: response.data.first_name, \n                last_name: response.data.last_name,\n                number: response.data.number,\n                email: response.data.email });\n          })\n          .catch((error) => {\n              console.log(error);\n          });\n    }\n//Set state for each attribute\n  onChangeUserFirstName(change) {\n    this.setState({ first_name: change.target.value });\n  }\n  onChangeUserLastName(change) {\n    this.setState({ last_name: change.target.value });\n  }\n  onChangeUserNumber(change) {\n    this.setState({ number: change.target.value });  \n  }\n  onChangeUserEmail(change) {\n    this.setState({ email: change.target.value });\n  }\n//On submit sent post request to save\n  onSubmit(change) {\n    change.preventDefault();\n    const person = {\n      first_name: this.state.first_name,\n      last_name: this.state.last_name,\n      number: this.state.number,\n      email: this.state.email\n    };\n    axios.post( locationToPost +'/users/update/'+this.props.match.params.id, person)\n        .then(res => {\n          res.status(200);\n          res.send(\"User updated\");\n        })\n        .catch(error => {\n          console.log(error);\n        });\n    \n    //Return to Index component\n    this.props.history.push('/index');\n    \n  }\n \n  render() {\n    return (\n    <div class=\"title-welcome container\">\n        <div class=\"row\">\n          <div class=\"col-md-8 col-lg-6 offset-lg-3\">\n            <h3>Edit User Profile</h3>\n              <form onSubmit={this.onSubmit}>\n                  <div className=\"form-group\">\n                      <label>First Name:  </label>\n                      <input \n                        type=\"text\" \n                        className=\"form-control\" \n                        value={this.state.first_name}\n                        onChange={this.onChangeUserFirstName}\n                        />\n                  </div>\n                  <div className=\"form-group\">\n                      <label>Last Name:  </label>\n                      <input \n                        type=\"text\" \n                        className=\"form-control\" \n                        value={this.state.last_name}\n                        onChange={this.onChangeUserLastName}\n                        />\n                  </div>\n                  <div className=\"form-group\">\n                      <label>Number: </label>\n                      <input type=\"text\" \n                        className=\"form-control\"\n                        value={this.state.number}\n                        onChange={this.onChangeUserNumber}\n                        />\n                  </div>\n                  <div className=\"form-group\">\n                      <label>Email: </label>\n                      <input type=\"text\" \n                        className=\"form-control\"\n                        value={this.state.email}\n                        onChange={this.onChangeUserEmail}\n                        />\n                  </div>\n                  <div className=\"form-group\">\n                      <input type=\"submit\" \n                        value=\"Update User\" \n                        className=\"btn btn-primary\"/>\n                  </div>\n              </form>\n          </div>\n        </div>\n      </div>  \n    );\n  }\n}","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\n//Class to construct table entries to show users in DB\nclass TableRow extends Component {\n    constructor(props) {\n        super(props);\n        this.delete = this.delete.bind(this);\n    }\n    //Function to send delete info from server\n    delete() {\n        axios.get('https://35a7deb5f76e493e9412648419a0a663.vfs.cloud9.us-west-2.amazonaws.com/users/delete/'+this.props.obj._id)\n            .then(console.log('Deleted'))\n            .catch(error => console.log(error));\n            window.location.reload();\n    }\n    \n    editButton(){\n      if (this.props.auth.isAuthenticated) \n      {\n        return(\n          <td>\n            <Link to={\"/edit/\"+this.props.obj._id} className=\"btn btn-primary\">Edit</Link>\n          </td>\n        );\n      }\n    }\n    \n    deleteButton(){\n      if (this.props.auth.isAuthenticated) \n      {\n        return(\n          <td>\n            <Link to={\"/index\"} onClick={this.delete} className=\"btn btn-danger\">Delete</Link>\n          </td>\n        );\n      }\n    }\n    \n    \n  render() {\n    return (\n        <tr>\n          <td>\n            {this.props.obj.first_name}\n          </td>\n          <td>\n            {this.props.obj.last_name}\n          </td>\n          <td>\n            {this.props.obj.number}\n          </td>\n          <td>\n            {this.props.obj.email}\n          </td>\n            {this.editButton()}\n            {this.deleteButton()}\n          \n        </tr>\n    );\n  }\n}\n\nTableRow.propTypes = {\n  auth: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\nexport default connect(\n  mapStateToProps,\n)(TableRow);\n\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport TableRow from './TableRow';\nimport '../App.css';\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\n\n//Class to show all users\nclass Index extends Component {\n\n  constructor(props) {\n      super(props);\n      this.state = {users: []};\n    }\n    //Get the users from mongoDB\n    componentDidMount(){\n      axios.get('https://35a7deb5f76e493e9412648419a0a663.vfs.cloud9.us-west-2.amazonaws.com/users/all')\n        .then(response => {\n          this.setState({ users: response.data });\n        })\n        .catch(error => {\n          console.log(error);\n        });\n    }\n    //Create each row from the returned array of users\n    tableRow(){\n      return this.state.users.map((object, i) =>{\n          return <TableRow obj={object} key={i} />;\n      });\n    }\n    \n    actionCol(){\n      if (this.props.auth.isAuthenticated) \n      {\n        return(<th colSpan=\"2\">Action</th>);\n      }\n    }\n//Render results\n    render() {\n      return (\n        <div>\n          <h3 class=\"title-welcome\">Users</h3>\n          <table className=\"table table-striped table-hover table-bordered my-table\">\n            <thead>\n              <tr>\n                <th>First Name</th>\n                <th>Last Name</th>\n                <th>Phone Number</th>\n                <th>Email</th>\n                {this.actionCol()}\n              </tr>\n            </thead>\n            <tbody>\n              { this.tableRow() }\n            </tbody>\n          </table>\n        <br/>\n        <br/>\n        <br/>\n        <br/>\n        <br/>\n        </div>\n      );\n    }\n  }\nIndex.propTypes = {\n  auth: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\nexport default connect(\n  mapStateToProps,\n)(Index);\n","import '../App.css';\nimport React, { Component } from 'react';\nimport Carousel from 'react-bootstrap/Carousel';\n\nexport default class Home extends Component {\n     render() {\n        return (\n              <Carousel>\n                  <Carousel.Item>\n                    <img\n                      className=\"d-block text-center mx-auto p-3 my-auto\"\n                      src=\"/mia_glow.png\"\n                      alt=\"First slide\"\n                    />\n                    <br/>\n                    <br/>\n                    <br/>\n                    <br/>\n                    <Carousel.Caption>\n                      <h3>Welcome to the Club</h3>\n                      <p>Join us at our next event!</p>\n                    </Carousel.Caption>\n                  </Carousel.Item>\n                  <Carousel.Item>\n                    <img\n                      className=\"d-block text-center mx-auto p-3 my-auto\"\n                      src=\"/skatejoring_girl_huskey.png\"\n                      alt=\"skatejoring_girl_huskey.png\"\n                    />\n                    <br/>\n                    <br/>\n                    <br/>\n                    <br/>\n                    <br/>\n                    <br/>\n                  \n                    <Carousel.Caption>\n                      <h3>Fun for Everyone</h3>\n                      <p>Especially the pups!!</p>\n                    </Carousel.Caption>\n                  </Carousel.Item>\n                  <Carousel.Item>\n                    <img\n                      className=\"d-block text-center mx-auto p-3 my-auto\"\n                      src=\"/skatejoring_orange_wheels.png\"\n                      alt=\"Third slide\"\n                    />\n                    <br/>\n                    <br/>\n                    <br/>\n                    <br/>\n                    <br/>\n                    <br/>\n                \n                    <Carousel.Caption>\n                      <h3>Safety Third!</h3>\n                      <p>No sandals allowed.</p>\n                    </Carousel.Caption>\n                  </Carousel.Item>\n                </Carousel>\n        );\n    }\n    \n}","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n//Import the icons for DarkSky\nimport Skycons from 'react-skycons';\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\n//Class to construct table entries to show events \nclass EventTableRow extends Component {\n    constructor(props) {\n        super(props);\n        this.delete = this.delete.bind(this);\n    }\n    //Function to send delete info from server\n    delete() {\n        axios.get('https://35a7deb5f76e493e9412648419a0a663.vfs.cloud9.us-west-2.amazonaws.com/events/delete/'+this.props.obj._id)\n            .then(console.log('Deleted'))\n            .catch(error => console.log(error));\n            window.location.reload();\n    }\n    \n   deleteButton(){\n      if (this.props.auth.isAuthenticated) \n      {\n        return(\n          <td>\n              <Link to={\"/events\"} onClick={this.delete} className=\"btn btn-danger\">Delete</Link>\n          </td>\n        );\n      }\n    }\n    \n    render() {\n        return (\n            <tr>\n              <td>\n                {this.props.obj.name}\n              </td>\n              <td>\n                {this.props.obj.date}\n              </td>\n              <td>\n                {this.props.obj.time}\n              </td>\n              <td>\n                {this.props.obj.location}\n              </td>\n              <td>\n                {this.props.obj.weather}\n              </td>\n              <td>\n                <Skycons color='white' icon={this.props.obj.icon} width=\"64\" height=\"64\" autoplay={true} />\n              </td>\n              {this.deleteButton()}\n              \n             \n            \n            </tr>\n        );\n    }\n}\n\nEventTableRow.propTypes = {\n  auth: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\nexport default connect(\n  mapStateToProps,\n)(EventTableRow);\n\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport EventTableRow from './eventTableRow';\nimport '../App.css';\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\n\n//Class to show all events\nclass Events extends Component {\n  constructor(props) {\n      super(props);\n      this.state = {events: []};\n    }\n    \n    //Get the events from mongoDB\n    componentDidMount(){\n      axios.get('https://35a7deb5f76e493e9412648419a0a663.vfs.cloud9.us-west-2.amazonaws.com/events/all')\n        .then(response => {\n          this.setState({ events: response.data });\n        })\n        .catch(error => {\n          console.log(error);\n        });\n    }\n    \n    //Create each row from the returned array of events\n    eventTableRow(){\n      return this.state.events.map((object, i) =>{\n          return <EventTableRow obj={object} key={i} />;\n      });\n    }\n    \n     actionCol(){\n      if (this.props.auth.isAuthenticated) \n      {\n        return(<th>Action</th>);\n      }\n    }\n\n//Render results\n    render() {\n      return (\n        <div>\n          <h3 class=\"title-welcome\">Events</h3>\n          <table className=\"table table-striped table-hover table-bordered my-table\">\n            <thead>\n              <tr>\n                <th>Event Name</th>\n                <th>Date</th>\n                <th>Time</th>\n                <th>Location</th>\n                <th colSpan=\"2\">Weather</th>\n                {this.actionCol()}\n              </tr>\n            </thead>\n            <tbody>\n              { this.eventTableRow() }\n            </tbody>\n          </table>\n        <br/>\n        <br/>\n        <br/>\n        <br/>\n        <br/>\n        <br/>\n        <br/>\n        <br/>\n        <br/>\n        <br/>\n        </div>\n      );\n    }\n  }\nEvents.propTypes = {\n  auth: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\nexport default connect(\n  mapStateToProps,\n)(Events);\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport moment from 'moment';\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { addEvent } from \"../actions/eventActions\";\nimport { withRouter } from \"react-router-dom\";\nconst isEmpty = require(\"is-empty\");\n\n\n\n//Class to create a new user for weather distribution\nclass CreateEvent extends Component {\n  constructor() {\n      super();\n      \n      //Set current state to empty\n      this.state = {\n          name: '',\n          date: '',\n          time: '',\n          locationStreet: '',\n          locationCity: '',\n          locationState: '',\n          locationZip: '',\n          errors: {}\n      };\n  }\n  \n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n  \n  //When input for each is changed, set new state of variable\n  onChange = e => {\n    this.setState({ [e.target.id]: e.target.value });\n  }\n  \n  \n\n//When the form is submitted, set object to post with axios\n  onSubmit = e => {\n    e.preventDefault();\n    \n          const place = {\n            name: !isEmpty(this.state.name) ? this.state.name : \"\",\n            street: !isEmpty(this.state.locationStreet) ? this.state.locationStreet : \"\",\n            city: this.state.locationCity,\n            state: this.state.locationState,\n            zip: !isEmpty(this.state.locationZip) ? this.state.locationZip : \"\",\n            date: moment(this.state.date, 'YYYY-MM-DD').format('dddd, MMMM Do YYYY'),\n            time: moment(this.state.time, 'HH:mm a').format('h:mm A'),\n          };\n    \n    axios.post('https://35a7deb5f76e493e9412648419a0a663.vfs.cloud9.us-west-2.amazonaws.com/weather', place)\n          .then(response => {\n              this.setState({ \n                    weather: response.data.currently.summary, \n                    icon: (response.data.currently.icon).toUpperCase().replace(/-/g,'_'),\n                });\n          })\n          .then( () =>{\n            \n            const event = {\n              name: this.state.name,\n              date: moment(this.state.date, 'YYYY-MM-DD').format('dddd, MMMM Do YYYY'),\n              time: moment(this.state.time, 'HH:mm a').format('h:mm A'),\n              location: this.state.locationStreet + \" \" + this.state.locationCity + \", \" + this.state.locationState + \" \" + this.state.locationZip,\n              weather: this.state.weather,\n              icon: this.state.icon\n            };\n           \n            this.props.addEvent(event, this.props.history);\n            \n          })\n          .catch((error) => {\n              console.log(error);\n          });\n  }\n  \n //Render form for create \n  render() {\n    return (\n        <div class=\"title-welcome container\">\n          <div class=\"row\">\n            <div class=\"col-md-8 col-lg-6 offset-lg-3\">\n              <h3>Add New Event</h3>\n              <form onSubmit={this.onSubmit}>\n              <div className=\"form-group\">\n                      <label>Event Name:  </label>\n                      <input \n                        type=\"text\"\n                        id = \"name\"\n                        className=\"form-control\" \n                        value={this.state.name}\n                        onChange={this.onChange}\n                        />\n                  </div>\n                  <div className=\"form-group\">\n                      <label>Date:  </label>\n                      <input \n                        type=\"date\"\n                        id = \"date\"\n                        className=\"form-control\" \n                        value={this.state.date}\n                        onChange={this.onChange}\n                        />\n                  </div>\n                  <div className=\"form-group\">\n                      <label>Time:  </label>\n                      <input \n                        type=\"time\" \n                        id = \"time\"\n                        className=\"form-control\" \n                        value={this.state.time}\n                        onChange={this.onChange}\n                        />\n                  </div>\n                   <div className=\"form-group\">\n                      <label>Address: </label>\n                      <input \n                        type=\"text\"\n                        id = \"locationStreet\"\n                        className=\"form-control\"\n                        value={this.state.locationStreet}\n                        onChange={this.onChange}\n                        />\n                  </div>\n                  <div className=\"form-group\">\n                      <label>City: </label>\n                      <input \n                        type=\"text\"\n                        id = \"locationCity\"\n                        className=\"form-control\"\n                        value={this.state.locationCity}\n                        onChange={this.onChange}\n                        />\n                  </div>\n                  <div className=\"form-group\">\n                      <label>State: </label>\n                      <select value={this.state.locationState} id = \"locationState\" onChange={this.onChange} className=\"form-control\">\n                        <option value=\"AL\">Alabama</option>\n                      \t<option value=\"AK\">Alaska</option>\n                      \t<option value=\"AZ\">Arizona</option>\n                      \t<option value=\"AR\">Arkansas</option>\n                      \t<option value=\"CA\">California</option>\n                      \t<option value=\"CO\">Colorado</option>\n                      \t<option value=\"CT\">Connecticut</option>\n                      \t<option value=\"DE\">Delaware</option>\n                      \t<option value=\"DC\">District Of Columbia</option>\n                      \t<option value=\"FL\">Florida</option>\n                      \t<option value=\"GA\">Georgia</option>\n                      \t<option value=\"HI\">Hawaii</option>\n                      \t<option value=\"ID\">Idaho</option>\n                      \t<option value=\"IL\">Illinois</option>\n                      \t<option value=\"IN\">Indiana</option>\n                      \t<option value=\"IA\">Iowa</option>\n                      \t<option value=\"KS\">Kansas</option>\n                      \t<option value=\"KY\">Kentucky</option>\n                      \t<option value=\"LA\">Louisiana</option>\n                      \t<option value=\"ME\">Maine</option>\n                      \t<option value=\"MD\">Maryland</option>\n                      \t<option value=\"MA\">Massachusetts</option>\n                      \t<option value=\"MI\">Michigan</option>\n                      \t<option value=\"MN\">Minnesota</option>\n                      \t<option value=\"MS\">Mississippi</option>\n                      \t<option value=\"MO\">Missouri</option>\n                      \t<option value=\"MT\">Montana</option>\n                      \t<option value=\"NE\">Nebraska</option>\n                      \t<option value=\"NV\">Nevada</option>\n                      \t<option value=\"NH\">New Hampshire</option>\n                      \t<option value=\"NJ\">New Jersey</option>\n                      \t<option value=\"NM\">New Mexico</option>\n                      \t<option value=\"NY\">New York</option>\n                      \t<option value=\"NC\">North Carolina</option>\n                      \t<option value=\"ND\">North Dakota</option>\n                      \t<option value=\"OH\">Ohio</option>\n                      \t<option value=\"OK\">Oklahoma</option>\n                      \t<option value=\"OR\">Oregon</option>\n                      \t<option value=\"PA\">Pennsylvania</option>\n                      \t<option value=\"RI\">Rhode Island</option>\n                      \t<option value=\"SC\">South Carolina</option>\n                      \t<option value=\"SD\">South Dakota</option>\n                      \t<option value=\"TN\">Tennessee</option>\n                      \t<option value=\"TX\">Texas</option>\n                      \t<option value=\"UT\">Utah</option>\n                      \t<option value=\"VT\">Vermont</option>\n                      \t<option value=\"VA\">Virginia</option>\n                      \t<option value=\"WA\">Washington</option>\n                      \t<option value=\"WV\">West Virginia</option>\n                      \t<option value=\"WI\">Wisconsin</option>\n                      \t<option value=\"WY\">Wyoming</option>\n                      </select>\n                  </div>\n                   <div className=\"form-group\">\n                      <label>Zip Code: </label>\n                      <input \n                        type=\"text\"\n                        id = \"locationZip\"\n                        className=\"form-control\"\n                        value={this.state.locationZip}\n                        onChange={this.onChange}\n                        />\n                  </div>\n                  <div className=\"form-group\">\n                      <input type=\"submit\" value=\"Register Event\" className=\"btn btn-primary\"/>\n                  </div>\n                </form>\n              </div>\n            </div>\n            <br/>\n            <br/>\n            <br/>\n            <br/>\n            <br/>\n            <br/>\n            <br/>\n            <br/>\n        </div>\n    );\n  }\n}\n\nCreateEvent.propTypes = {\n  addEvent: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { addEvent }\n)(withRouter(CreateEvent));\n\n","import axios from \"axios\";\nimport {\n  GET_ERRORS,\n} from \"./types\";\n\nexport const addEvent = (eventData, history) => dispatch => {\n  axios\n    .post(\"/events/add\", eventData)\n    .then(res => history.push(\"/events\")) // re-direct to events on successful creation\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n\n","import React, { Component } from \"react\";\n//import { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { loginUser } from \"../actions/authActions\";\n//import classnames from \"classnames\";\n\nclass Login extends Component {\n   constructor() {\n      super();\n    \n      //Set current state to empty\n      this.state = {\n          email: '',\n          password: '',\n          errors: {}\n      };\n  }\n  \n  componentDidMount() {\n    // If logged in and user navigates to Login page, should redirect them to dashboard\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push(\"/Dashboard\");\n    }\n  }\n  \n  componentWillReceiveProps(nextProps) {\n    if (nextProps.auth.isAuthenticated) {\n      this.props.history.push(\"/Dashboard\"); // push user to dashboard when they login\n    }\n    if (nextProps.errors) {\n          this.setState({\n            errors: nextProps.errors\n          });\n    }\n  }\n  //When input for each is changed, set new state of variable\n  \n  onChange = e => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n\n  //When the form is submitted, set object to post with axios\n  onSubmit = e => {\n    e.preventDefault();\n\n    const person = {\n      email: this.state.email,\n      password: this.state.password\n    };\n   \n   this.props.loginUser(person);\n     \n  };\n //Render form for create \n  render() {\n    const { errors } = this.state;\n  \n    return (\n        <div class=\"title-welcome container\">\n          <div class=\"row\">\n            <div class=\"col-md-8 col-lg-6 offset-lg-3\">\n              <h3>Login</h3>\n              <form noValidate onSubmit={this.onSubmit}>\n                  <div className=\"form-group\">\n                      <label>E-mail: </label>\n                      <input \n                        type=\"email\"\n                        id = \"email\"\n                        className=\"form-control\"\n                        value={this.state.email}\n                        onChange={this.onChange}\n                        />\n                  </div>\n                  <div className=\"form-group\">\n                      <label>Password: </label>\n                      <input \n                        type=\"password\"\n                        id = \"password\" \n                        className=\"form-control\"\n                        value={this.state.password}\n                        onChange={this.onChange}\n                        />\n                  </div>\n                  <div className=\"form-group\">\n                      <input type=\"submit\" value=\"Log In\" className=\"btn btn-success\"/>\n                  </div>\n                </form>\n              </div>\n            </div>\n        </div>\n    );\n  }\n}\n\nLogin.propTypes = {\n  loginUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\nexport default connect(\n  mapStateToProps,\n  { loginUser }\n)(Login);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logoutUser } from \"../../actions/authActions\";\n\n\nclass Navbar extends Component {\n    \n    onLogoutClick = e => {\n        e.preventDefault();\n        this.props.logoutUser();\n    };\n     \n    loggedIn(){\n  \n      if (!this.props.auth.isAuthenticated) \n      {\n        return(<ul class=\"navbar-nav float-right\">\n            \n            \n            <li class=\"nav-item\">\n                <Link to={'/login'} className=\"nav-link my-nav-link\">Login</Link>\n            </li>\n        </ul>);\n      }\n      else\n      {\n        return(\n            <ul class=\"navbar-nav float-right\">\n                \n                <li class=\"nav-item\">\n                    <Link to={'/register'} className=\"nav-link my-nav-link\">User Signup</Link>\n                </li>\n                \n                <li class=\"nav-item\">\n                    <Link to={'/createEvent'} className=\"nav-link my-nav-link\">Add New Event</Link>\n                </li>\n                \n                <button\n                    onClick={this.onLogoutClick}\n                    className=\"btn btn-success\"\n                >\n                Logout\n                </button>\n            </ul>\n        );\n      }\n    }\n    \n  render() {\n    return (\n\n      <nav class=\"navbar navbar-expand-md navbar-dark bg-dark nav-bkgr\">\n          <ul class=\"navbar-nav mr-auto\">\n            <li class=\"nav-item active\">\n                <Link to={'/'} className=\"nav-link my-nav-link\">Skatejoring</Link>\n            </li>\n            <li class=\"nav-item my-nav-link\">\n               <Link to={'/index'} className=\"nav-link \">Users</Link>\n            </li>\n            <li class=\"nav-item my-nav-link\">\n               <Link to={'/events'} className=\"nav-link \">Events</Link>\n            </li>\n          </ul>\n          \n          {this.loggedIn()}\n          \n          \n      </nav>\n    )}\n  }\n  \nNavbar.propTypes = {\n  logoutUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\nexport default connect(\n  mapStateToProps,\n   { logoutUser }\n)(Navbar);\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => (\n  <Route\n    {...rest}\n    render={props =>\n      auth.isAuthenticated === true ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to=\"/login\" />\n      )\n    }\n  />\n);\nPrivateRoute.propTypes = {\n  auth: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\nexport default connect(mapStateToProps)(PrivateRoute);","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logoutUser } from \"../../actions/authActions\";\n\nclass Dashboard extends Component {\n \n\nrender() {\n   const {user} = this.props.auth;\nreturn (\n    <div className=\"container valign-wrapper\">\n        <div className=\"row\">\n          <div className=\"col s12 center-align grey-text\">\n            <h4>\n              <b>Hey there,</b> {user.name}\n            </h4>\n            \n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nDashboard.propTypes = {\n  logoutUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\nexport default connect(\n  mapStateToProps,\n)(Dashboard);","import './App.css';\nimport React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport jwt_decode from \"jwt-decode\";\nimport setAuthToken from \"./utils/setAuthToken\";\nimport { setCurrentUser, logoutUser } from \"./actions/authActions\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nimport Register from './components/register.component';\nimport Edit from './components/edit.component';\nimport Index from './components/index.component';\nimport Home from './components/home.component';\nimport Events from './components/events.component';\nimport CreateEvent from './components/eventCreate.component';\nimport Login from './components/login.component';\nimport Navbar from \"./components/layout/Navbar\";\nimport PrivateRoute from \"./components/private-route/PrivateRoute\";\nimport Dashboard from \"./components/dashboard/Dashboard\";\n\n// Check for token to keep user logged in\nif (localStorage.jwtToken) {\n  // Set auth token header auth\n  const token = localStorage.jwtToken;\n  setAuthToken(token);\n  // Decode token and get user info and exp\n  const decoded = jwt_decode(token);\n  // Set user and isAuthenticated\n  store.dispatch(setCurrentUser(decoded));\n// Check for expired token\n  const currentTime = Date.now() / 1000; // to get in milliseconds\n  if (decoded.exp < currentTime) {\n    // Logout user\n    store.dispatch(logoutUser());\n    // Redirect to login\n    window.location.href = \"./login\";\n  }\n}\n\n\n\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"container green-bkgr\">\n         <Navbar />\n          <br/>\n          <br/>\n          <br/>\n            <h2 class= \"title-welcome\">Skatejoring Social Club</h2>\n          <br/>\n            \n            <Route exact path='/login' component={ Login } />\n            <Route exact path='/events' component={ Events } />\n            <Route exact path='/register' component={ Register } />\n            <Route exact path='/index' component={ Index } />\n            <Route path='/edit/:id' component={ Edit } />\n            \n            <Switch>\n              <PrivateRoute> \n                <PrivateRoute exact path='/dashboard' component={ Dashboard } />\n                <PrivateRoute exact path='/createEvent' component={ CreateEvent } />\n              </PrivateRoute>\n            </Switch>\n            \n            <Route exact path='/' component={ Home } />\n            \n            <footer class=\"container\">\n              <p class=\"text-white\">&copy; 2019 DW Designs         <a href=\"https://darksky.net/poweredby/\"> Powered by Dark Sky</a></p>\n            </footer>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          </div>\n        </Router>\n      </Provider>\n\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\n\n\n\nReactDOM.render(\n    <BrowserRouter>\n    <App />\n    </BrowserRouter>, document.getElementById('root')\n    );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}